[
    {
        "id": "5e06b211-898d-490f-a39b-9de90ef04fb1",
        "title": "Competitive Programming - Binary Search",
        "tags": "[]",
        "likes": 23,
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:04:23.664Z",
        "updated_at": "2023-07-15T08:26:51.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "8866548f-3cbd-426f-9b9e-e6c45e670d25",
        "title": "Matrix using Dynamic Arrays or Lists",
        "tags": "[]",
        "likes": 5,
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "dislikes": 1,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:04:07.065Z",
        "updated_at": "2023-07-13T07:00:17.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "e798de74-2d4e-4ea3-a90e-a617877cbf90",
        "title": "Algorithm Design Techniques",
        "tags": "[]",
        "likes": 2,
        "dislikes": 1,
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:03:47.327Z",
        "updated_at": "2023-03-19T15:01:18.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "8c3e196b-5675-4cc1-8f2c-645df93a0582",
        "title": "Flood Fill",
        "tags": "[]",
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "likes": 4,
        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:03:30.101Z",
        "updated_at": "2023-05-23T13:42:42.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "12bb8218-409d-47c5-92cd-be8e7e5286cd",
        "title": "Understanding Logic Behind Library Function with Custom Sort",
        "tags": "[]",
        "likes": 0,
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:03:13.983Z",
        "updated_at": "2023-02-15T07:09:23.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "bcd6020e-83fe-4e83-bcc5-56899ebd0bc7",
        "title": "PRIORITY QUEUE WITH CUSTOM DATA TYPES",
        "tags": "[]",
        "likes": 1,
        "dislikes": 0,
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:02:46.328Z",
        "updated_at": "2023-06-23T12:34:29.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "16fb8c51-a0cb-470f-a2c3-e6c455f9d507",
        "title": "Union-Find Disjoint Set",
        "tags": "[]",
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "likes": 1,
        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:02:23.812Z",
        "updated_at": "2023-06-23T16:38:43.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "dd48397c-e4aa-49f0-83d1-e51836c7af9f",
        "title": "Tree Construction From Traversals (PreOrder and InOrder)",
        "tags": "[]",
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "likes": 0,
        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:02:06.848Z",
        "updated_at": "2023-02-08T01:02:06.848Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "66fede74-960e-45cb-b1eb-2809e5d39617",
        "title": "Matrix Chain Multiplication - PARTITION DP",
        "tags": "[]",
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "likes": 1,
        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:01:45.733Z",
        "updated_at": "2023-02-20T14:55:19.000Z",
        "author": {
            "userName": "beingzero"
        }
    },
    {
        "id": "1bda6a23-2d49-4f6c-b1fd-a54c26a77590",
        "title": "Graph Coding Problems",
        "tags": "[]",
        "likes": 2,
        "dislikes": 0,
        "opens": 0,
        "deleted": 0,
        "description": "<p>This is our modified definition of Binary Search</p><p>Given an array A of size N which is&nbsp;<strong><em>somehow</em></strong>&nbsp;ordered. We need to find some a given value in the array.&nbsp;Can we somehow devise a strategy which helps us discard half of the array in every step?</p><p>This means if we are searching in array of size N, then after first step we aim to discard half and search in N/2 then next step we want to discard half and search in remaining N/4 and so on...</p><p>How many Steps will it take for us to reach array of size 1?&nbsp;Because once remaining array is of size 1.&nbsp;We are done (we can for sure say the answer exists or not).</p><p>Let's understand how many steps it'll take for us to conclude.</p><p>N -&gt; N/2 -&gt; N/22&nbsp;-&gt; N/23&nbsp;-&gt; ........N/2K</p><p>Assume that elements of array will become 1 after K steps.&nbsp;We need to find that K.</p><p>1 =&nbsp;N/2K</p><p>N = 2K</p><p>Taking log2&nbsp;on both sides</p><p>log2N = log22K</p><p>Taking</p><p>log2N = k</p><p>In General Also, If we have a Loop Like This.&nbsp;It'll run logN times.</p><p>for(int i=n;i&gt;1;i = i/2)</p><p>Or This</p><p>for(int i=1;i&lt;n;i =i*2)</p><p>Both of above loops run logN times.</p><p><strong>BINARY SEARCH</strong></p><p>Given an array A of size N.&nbsp;for any given value K, return its index in the array if it exists, return -1 if element doesn't exist.</p><p>&nbsp;ALGORITHM is simple but there are many common mistakes that happen.&nbsp;Check the code below and fill the condition.</p><pre class=\"ql-syntax\" spellcheck=\"false\">​binSearch(a, n, k)\n&nbsp;&nbsp;&nbsp;&nbsp;left=0\n&nbsp;&nbsp;&nbsp;&nbsp;right=n-1\n\n&nbsp;&nbsp;&nbsp;&nbsp;while(CONDITION)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;middle = (left+right)/2\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if a[middle]==k\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return middle\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if k &lt; a[middle]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = middle + 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right = middle - 1\n\n</pre><p><strong>THINKING QUESTIONS ON BINARY SEARCH</strong></p><ol><li>Given a sorted array having duplicates in it, return first occurring index of K.&nbsp;A = [1, 1, 2, 2, 2, 2, 3, 4, 5, 6], K=2.</li><li>Given a sorted array having duplicates in it, return occurence count of a given value K.&nbsp;&nbsp;</li><li>Given a sorted array of distinct elements that has been rotated (few elements remove from front and put up in the end), return index of given K in logN time.</li><li class=\"ql-indent-1\">A = [<strong>1, 5, 7, 9</strong>, 15, 18, 99]</li><li class=\"ql-indent-2\">rotated A =&nbsp;&nbsp;​[15, 18, 99,&nbsp;<strong>1, 5, 7, 9</strong>]</li><li class=\"ql-indent-2\">K = 18</li><li>Given an unsorted array of elements in which all ZEROES have been moved to front, return count of 0s in logN time.</li><li class=\"ql-indent-1\">A = [0, 0, 0, 0, 0, 0, 7, 1, 2, 5, 9, 4, 6]</li><li class=\"ql-indent-1\">ANS=6</li><li>Given an integer N, find square root of N correct upto three decimal places. [OBSERVE how it is a search problem]</li><li>Given a sorted array, find an index where i==a[i].&nbsp;A =[-5, -4, -2, 1, 4, 8, 9, 11]</li><li>MEDIAN in row sorted matrix -&nbsp;<a href=\"https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix/0/?ref=self\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GEEKSFORGEEKS</a></li><li>Median of Two Sorted Arrays -&nbsp;<a href=\"https://www.youtube.com/watch?v=BNy8Ldmhi3g&amp;list=PLQ9cQ3JqeqU86q8WnyO5PFtVlYGUIV4c8\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">YouTube Video</a></li><li>Nth Fibonacci Number in logN time</li></ol><p><strong>PRACTICE PROBLEMS</strong></p><ul><li><a href=\"https://www.interviewbit.com/courses/programming/topics/binary-search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">InterviewBit</a></li><li><a href=\"https://leetcode.com/explore/learn/card/binary-search/\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">LeetCode</a></li><li><a href=\"https://practice.geeksforgeeks.org/topics/Binary%20Search\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">GeeksForGeeks</a></li><li><a href=\"https://a2oj.com/contest?ID=40387\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">A2OJ Collection</a></li></ul><p><strong>GREAT REFERENCES</strong></p><ol><li><a href=\"https://cp-algorithms.com/num_methods/ternary_search.html\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Ternary Search</a>​</li><li><a href=\"https://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view\" rel=\"noopener noreferrer\" target=\"_blank\" style=\"color: rgb(0, 183, 255);\">Competitive Programming Aspirants Must Read</a></li></ol><p><br></p>",

        "private": 0,
        "type": "blog",
        "created_at": "2023-02-08T01:01:26.746Z",
        "updated_at": "2023-05-11T17:15:54.000Z",
        "author": {
            "userName": "beingzero"
        }
    }
]
